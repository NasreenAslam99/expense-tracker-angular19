{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction TransactionFormComponent_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", c_r2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(c_r2);\n  }\n}\nexport let TransactionFormComponent = /*#__PURE__*/(() => {\n  class TransactionFormComponent {\n    constructor() {\n      this.transactionAdded = new EventEmitter();\n      this.description = '';\n      this.amount = null;\n      this.type = 'expense';\n      this.category = 'Food';\n      this.categories = ['Food', 'Travel', 'Bills', 'Entertainment', 'Salary', 'Other'];\n    }\n    onSubmit() {\n      if (!this.description || this.amount === null) return;\n      const t = {\n        id: Date.now(),\n        description: this.description,\n        amount: Number(this.amount),\n        type: this.type,\n        category: this.category,\n        date: new Date().toISOString()\n      };\n      this.transactionAdded.emit(t);\n      // reset form\n      this.description = '';\n      this.amount = null;\n      this.type = 'expense';\n      this.category = 'Food';\n    }\n    static {\n      this.ɵfac = function TransactionFormComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || TransactionFormComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: TransactionFormComponent,\n        selectors: [[\"app-transaction-form\"]],\n        outputs: {\n          transactionAdded: \"transactionAdded\"\n        },\n        decls: 21,\n        vars: 5,\n        consts: [[\"f\", \"ngForm\"], [1, \"transaction-form\", 3, \"ngSubmit\"], [\"name\", \"description\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"amount\", \"type\", \"number\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"type\", 3, \"ngModelChange\", \"ngModel\"], [\"value\", \"expense\"], [\"value\", \"income\"], [\"name\", \"category\", 3, \"ngModelChange\", \"ngModel\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\"], [3, \"value\"]],\n        template: function TransactionFormComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"form\", 1, 0);\n            i0.ɵɵlistener(\"ngSubmit\", function TransactionFormComponent_Template_form_ngSubmit_0_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.onSubmit());\n            });\n            i0.ɵɵelementStart(2, \"label\");\n            i0.ɵɵtext(3, \"Description\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"input\", 2);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function TransactionFormComponent_Template_input_ngModelChange_4_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              i0.ɵɵtwoWayBindingSet(ctx.description, $event) || (ctx.description = $event);\n              return i0.ɵɵresetView($event);\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"label\");\n            i0.ɵɵtext(6, \"Amount\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"input\", 3);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function TransactionFormComponent_Template_input_ngModelChange_7_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              i0.ɵɵtwoWayBindingSet(ctx.amount, $event) || (ctx.amount = $event);\n              return i0.ɵɵresetView($event);\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"label\");\n            i0.ɵɵtext(9, \"Type\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(10, \"select\", 4);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function TransactionFormComponent_Template_select_ngModelChange_10_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              i0.ɵɵtwoWayBindingSet(ctx.type, $event) || (ctx.type = $event);\n              return i0.ɵɵresetView($event);\n            });\n            i0.ɵɵelementStart(11, \"option\", 5);\n            i0.ɵɵtext(12, \"Expense\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(13, \"option\", 6);\n            i0.ɵɵtext(14, \"Income\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(15, \"label\");\n            i0.ɵɵtext(16, \"Category\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(17, \"select\", 7);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function TransactionFormComponent_Template_select_ngModelChange_17_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              i0.ɵɵtwoWayBindingSet(ctx.category, $event) || (ctx.category = $event);\n              return i0.ɵɵresetView($event);\n            });\n            i0.ɵɵtemplate(18, TransactionFormComponent_option_18_Template, 2, 2, \"option\", 8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(19, \"button\", 9);\n            i0.ɵɵtext(20, \"Add\");\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.description);\n            i0.ɵɵadvance(3);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.amount);\n            i0.ɵɵadvance(3);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.type);\n            i0.ɵɵadvance(7);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.category);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n          }\n        },\n        dependencies: [CommonModule, i1.NgForOf, FormsModule, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n        styles: [\".transaction-form[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:12px;padding:20px;border-radius:10px;background:#fff;box-shadow:0 4px 12px #00000014}.transaction-form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-weight:600;color:#333;margin-bottom:4px}.transaction-form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .transaction-form[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{padding:8px 10px;border:1px solid #ccc;border-radius:6px;font-size:14px;transition:.3s}.transaction-form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus, .transaction-form[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]:focus{outline:none;border-color:#4caf50;box-shadow:0 0 5px #4caf504d}.transaction-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background:#4caf50;color:#fff;padding:10px 16px;border:none;border-radius:6px;font-size:15px;cursor:pointer;transition:.3s}.transaction-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background:#388e3c}\"]\n      });\n    }\n  }\n  return TransactionFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}